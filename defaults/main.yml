---

# minimum supported version: 0.15

prometheus_node_exporter_version: 0.18.1
prometheus_node_exporter_release_name: "node_exporter-{{ prometheus_node_exporter_version }}.linux-{{ go_arch }}"

# https://github.com/prometheus/node_exporter#enabled-by-default
prometheus_node_exporter_enabled_collectors: []

# https://github.com/prometheus/node_exporter#disabled-by-default
prometheus_node_exporter_disabled_collectors: []

prometheus_node_exporter_config_flags:
  'web.listen-address': '0.0.0.0:9100'
  'log.level': 'info'

# If any of the variables below are set, then the 'web.config' config flag
# will be added, pointing to a configuration file that contains the appropriate
# parameters.
# Based on https://prometheus.io/docs/prometheus/latest/configuration/https/


# TLS key materials

# These values are expected to contain the actual content of the X.509 key
# materials (in PEM format). Not file names.

# prometheus_node_exporter_tls_cert: |
#   -----BEGIN CERTIFICATE-----
#   MIIBwjCCAUigAwIBAgIUY+hQ3ZiN+RvHL.......
#   -----END CERTIFICATE-----
# prometheus_node_exporter_tls_key: |
#   -----BEGIN PRIVATE.....
#   .................
#   ....-END PRIVATE KEY-----
# prometheus_node_exporter_tls_client_ca: |
#   -----BEGIN CERTIFICATE-----
#   MIIBvTCCAUSgAwIBAgIUHxAqS4UGCPM...........
#   .......................
#   -----END CERTIFICATE-----

# Alternatively, you can let the role generate a self signed key pair.
# Setting this to true will override 'prometheus_node_exporter_tls_cert'
# and 'prometheus_node_exporter_tls_key'
prometheus_node_exporter_tls_selfsigned: false

# Optionally, you can provide your own CA to sign the certificate with
# When you enable this, you need to provide a CA key and cert. Those
# are expected to be PEM formatted X.509
prometheus_node_exporter_tls_ownca_signed: false
# prometheus_node_exporter_tls_ownca_content: |
#   -----BEGIN CERTIFICATE-----
#   MIIBvTCCAUSgAwIBAgIUHxAqS4UGCPM...........
#   .......................
#   -----END CERTIFICATE-----
# prometheus_node_exporter_tls_ownca_privatekey_content: |
#   -----BEGIN PRIVATE.....
#   .................
#   ....-END PRIVATE KEY-----


# Various options to influence the key/csr parameters. See
# https://docs.ansible.com/ansible/3/collections/community/crypto/openssl_privatekey_module.html
# https://docs.ansible.com/ansible/3/collections/community/crypto/openssl_csr_pipe_module.html
# for what their defaults are.

# prometheus_node_exporter_tls_selfsigned_key_size: 4096
# prometheus_node_exporter_tls_selfsigned_key_type: RSA
# prometheus_node_exporter_tls_selfsigned_key_curve: secp256r1
# prometheus_node_exporter_tls_selfsigned_key_regenerate: always
# prometheus_node_exporter_tls_selfsigned_csr_common_name: "{{ ansible_fqdn }} Prometheus Node Exporter"

# Provide plain passwords - the role will take care of the correct hashing

# prometheus_node_exporter_basic_auth_users:
#   admin: hackme
#   prometheus: hackme


# Used as-is

# prometheus_node_exporter_http_server_config:
#   http2: true
#   headers:
#     Content-Security-Policy: default-src 'self' trusted.com *.trusted.com
#     X-Frame-Options: SAMEORIGIN
#     X-Content-Type-Options: nosniff
#     X-XSS-Protection: 1; mode=block
#     Strict-Transport-Security: max-age=600
